# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/api/20_mavlink.mavcom.ipynb.

# %% auto 0
__all__ = ['test_MAVCom']

# %% ../../nbs/api/20_mavlink.mavcom.ipynb 7
import time, os, sys

from mavcom.logging import logging
from mavcom.utils.general import LeakyQueue

# os.environ['MAVLINK20'] == '1' should be placed in mavcom.__init__.py
assert os.environ[
           'MAVLINK20'] == '1', "Set the environment variable before from pymavlink import mavutil  library is imported"

# logging.getLogger("uav").setLevel(logging.DEBUG)
# logging.root.setLevel(logging.INFO)
import threading
import queue
import typing as typ
from pathlib import Path
from inspect import currentframe, getframeinfo
from pymavlink import mavutil
from mavcom.mavlink.mavcom import *
from fastcore.test import *
# from mavcom.imports import *   # TODO why is this relative import on nbdev_export?


# %% ../../nbs/api/20_mavlink.mavcom.ipynb 19
def test_MAVCom():
    """Test MAVCom with a client and server on the same machine using UDP ports `14445`  with `server_system_ID=111, client_system_ID=222`"""
    with MAVCom("udpin:localhost:14445", source_system=111, debug=False) as client:
        with MAVCom("udpout:localhost:14445", source_system=222, debug=False) as server:
            server.add_component(BaseComponent(server, mav_type=MAV_TYPE_CAMERA, source_component = 22, debug=False))
            client.add_component(BaseComponent(client, mav_type=MAV_TYPE_GCS, source_component = 11, debug=False))
    
            MAX_PINGS = 4
            client.component[11].send_ping(222, 22, max_pings=MAX_PINGS)
            time.sleep(0.5)
    
    print(f"{server.source_system = };  {server.message_cnts = }")
    print(f"{client.source_system = };  {client.message_cnts = }")
    
    test_eq(server.message_cnts[111]['PING'], MAX_PINGS)
    test_eq(server.message_cnts[111]['HEARTBEAT']>0, True) 
    test_eq(client.message_cnts[222]['PING'], MAX_PINGS)
    test_eq(client.message_cnts[222]['HEARTBEAT']>0, True)
    
test_MAVCom()
