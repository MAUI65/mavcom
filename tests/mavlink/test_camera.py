# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/api/22_mavlink.camera.ipynb.

# %% auto 0
__all__ = ['NAN', 'CAMERA_INFORMATION', 'CAMERA_SETTINGS', 'STORAGE_INFORMATION', 'CAMERA_CAPTURE_STATUS',
           'CAMERA_IMAGE_CAPTURED', 'on_message', 'Cam1', 'Cam2', 'Cli', 'test_client_server']

# %% ../../nbs/api/22_mavlink.camera.ipynb 6
import time
from mavcom.mavlink.mavcom import MAVCom, time_since_boot_ms, time_UTC_usec, date_time_str
from mavcom.mavlink.component import BaseComponent, mavutil, mavlink, MAVLink

from mavcom.mavlink.camera_client import *
from mavcom.mavlink.camera_server import *
from mavcom.utils.display import *
from fastcore.test import *

# %% ../../nbs/api/22_mavlink.camera.ipynb 9
# from pymavlink.dialects.v20 import ardupilotmega as mav
# from pymavlink.dialects.v20.ardupilotmega import MAVLink


NAN = float("nan")

"""
MAV_CMD_REQUEST_CAMERA_CAPTURE_STATUS = 527 # https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_CAMERA_CAPTURE_STATUS
MAV_CMD_REQUEST_CAMERA_INFORMATION = 521 # https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_CAMERA_INFORMATION
MAV_CMD_REQUEST_CAMERA_SETTINGS = 522 # https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_CAMERA_SETTINGS
MAV_CMD_REQUEST_STORAGE_INFORMATION = 525 # https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_STORAGE_INFORMATION
MAV_CMD_STORAGE_FORMAT = 526 # https://mavlink.io/en/messages/common.html#MAV_CMD_STORAGE_FORMAT
MAV_CMD_SET_CAMERA_ZOOM = 531 # https://mavlink.io/en/messages/common.html#MAV_CMD_SET_CAMERA_ZOOM
MAV_CMD_SET_CAMERA_FOCUS = 532 # https://mavlink.io/en/messages/common.html#MAV_CMD_SET_CAMERA_FOCUS
MAV_CMD_IMAGE_START_CAPTURE = 2000  # https://mavlink.io/en/messages/common.html#MAV_CMD_IMAGE_START_CAPTURE
MAV_CMD_IMAGE_STOP_CAPTURE = 2001  # https://mavlink.io/en/messages/common.html#MAV_CMD_IMAGE_STOP_CAPTURE
MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION = 2504 # https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION
MAV_CMD_REQUEST_VIDEO_STREAM_STATUS = 2505 # https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_VIDEO_STREAM_STATUS
MAV_CMD_VIDEO_START_CAPTURE = 2500 # https://mavlink.io/en/messages/common.html#MAV_CMD_VIDEO_START_CAPTURE
MAV_CMD_VIDEO_STOP_CAPTURE = 2501 # https://mavlink.io/en/messages/common.html#MAV_CMD_VIDEO_STOP_CAPTURE
MAV_CMD_SET_CAMERA_MODE = 530 # https://mavlink.io/en/messages/common.html#MAV_CMD_SET_CAMERA_MODE

"""
CAMERA_INFORMATION = mavlink.MAVLINK_MSG_ID_CAMERA_INFORMATION # https://mavlink.io/en/messages/common.html#CAMERA_INFORMATION
CAMERA_SETTINGS = mavlink.MAVLINK_MSG_ID_CAMERA_SETTINGS # https://mavlink.io/en/messages/common.html#CAMERA_SETTINGS
STORAGE_INFORMATION = mavlink.MAVLINK_MSG_ID_STORAGE_INFORMATION # https://mavlink.io/en/messages/common.html#STORAGE_INFORMATION
CAMERA_CAPTURE_STATUS = mavlink.MAVLINK_MSG_ID_CAMERA_CAPTURE_STATUS # https://mavlink.io/en/messages/common.html#CAMERA_CAPTURE_STATUS
CAMERA_IMAGE_CAPTURED = mavlink.MAVLINK_MSG_ID_CAMERA_IMAGE_CAPTURED # https://mavlink.io/en/messages/common.html#CAMERA_IMAGE_CAPTURED


# %% ../../nbs/api/22_mavlink.camera.ipynb 24
from mavcom.mavlink.mavcom import MAVCom
from mavcom.mavlink.component import BaseComponent, mavutil
import time

def on_message(message):
    print(f"on_message: {message}")
    return True # Return True to indicate that command was ok and send ack

class Cam1(BaseComponent):
    def __init__(self, source_component, mav_type, debug=False):
        super().__init__(source_component=source_component, mav_type=mav_type)
        self._set_message_callback(on_message)


class Cam2(BaseComponent):
    def __init__(self, source_component, mav_type, debug=False):
        super().__init__(source_component=source_component, mav_type=mav_type)
        self._set_message_callback(on_message)


class Cli(BaseComponent):
    def __init__(self, source_component, mav_type, debug=False):
        super().__init__(source_component=source_component, mav_type=mav_type)
        self._set_message_callback(on_message)

# %% ../../nbs/api/22_mavlink.camera.ipynb 25
async def test_client_server(con1="udpin:localhost:14445", con2="udpout:localhost:14445"):
    with MAVCom(con1, source_system=111) as client:
        with MAVCom(con2, source_system=222) as server:

            client.add_component(Cli(mav_type=mavlink.MAV_TYPE_GCS, source_component=11))
            server.add_component(Cam1(mav_type=mavlink.MAV_TYPE_CAMERA, source_component=22))
            server.add_component(Cam1(mav_type=mavlink.MAV_TYPE_CAMERA, source_component=23))

            for key, comp in client.component.items():
                # result = await comp.wait_heartbeat(target_system=222, target_component=22)
                result = await comp.wait_heartbeat(remote_mav_type=mavlink.MAV_TYPE_CAMERA, target_system=222, target_component=22)
                print(f"Component {comp}, Heartbeat: {result = }")

            Num_Iters = 3
            for i in range(Num_Iters):
                await client.component[11]._test_command(222, 22, 1)

                await client.component[11]._test_command(222, 23, 1)

            await client.component[11]._test_command(222, 24, 1)

    print(f"{server.source_system = };  {server.message_cnts = }")
    print(f"{client.source_system = };  {client.message_cnts = }")
    print()
    print(f"{client.source_system = } \n{client.summary()} \n")
    print(f"{server.source_system = } \n{server.summary()} \n")
    
    assert client.component[11].num_cmds_sent == Num_Iters * 2 + 1
    print(f"{server.component[22].message_cnts[111]['COMMAND_LONG'] = }")
    assert server.component[22].message_cnts[111]['COMMAND_LONG'] == Num_Iters
    assert client.component[11].num_acks_rcvd == Num_Iters * 2
    assert client.component[11].num_acks_drop == 1
    assert server.component[22].num_cmds_rcvd == Num_Iters
    assert server.component[23].num_cmds_rcvd == Num_Iters

try:     
    import asyncio 
    # notebook does not run asyncio tasks
    asyncio.run(test_client_server(con1="udpin:localhost:14445", con2="udpout:localhost:14445"))
except: 
    pass
