# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/api/04_utils.display.ipynb.

# %% auto 0
__all__ = ['ClassMarkdownRenderer', 'doc_class']

# %% ../../nbs/api/04_utils.display.ipynb 2
from nbdev.showdoc import *
from nbdev.showdoc import *
from fastcore.test import *
import inspect

# %% ../../nbs/api/04_utils.display.ipynb 4
from fastcore.utils import *
from fastcore.utils import *
import cv2
import numpy as np
from imutils import resize
from PIL import Image
import matplotlib
import matplotlib.pyplot as plt
import moviepy.editor as mvp
from moviepy.video.io.ffmpeg_writer import FFMPEG_VideoWriter
import logging
import mavcom.params as params
from mavcom.utils.display import *

# %% ../../nbs/api/04_utils.display.ipynb 28
class ClassMarkdownRenderer():
    """Markdown renderer for a class. Renders all the public methods in one go in a Jupyter notebook."""
    def __init__(self, doclist):
        self.doclist = doclist

    def _repr_markdown_(self):
        """ Markdown representation for Jupyter notebooks."""
        docstr = ''
        for doc in self.doclist:
            docstr += doc
            docstr += '\n\n'           
        return docstr
    __repr__=__str__=_repr_markdown_    
    
def doc_class(cls):
    docs = [show_doc(obj).__repr__() for name, obj in inspect.getmembers(cls, inspect.isfunction) if not (name.startswith('_'))]
    return ClassMarkdownRenderer(docs)

